MyModule	input.rb	/^module MyModule$/;"	m
my_method	input.rb	/^  def my_method$/;"	f	module:MyModule
MyModule	input.rb	/^module MyModule$/;"	m
my_alias	input.rb	/^  alias my_alias my_method$/;"	a	module:MyModule
$new	input.rb	/^  alias $new $old$/;"	a
my_alias_method0	input.rb	/^  alias_method :my_alias_method0, :my_method$/;"	a	module:MyModule
my_alias_method1	input.rb	/^  alias_method "my_alias_method1", :my_method$/;"	a	module:MyModule
my_alias_method2	input.rb	/^  alias_method(:my_alias_method2, :my_method)$/;"	a	module:MyModule
my_alias_method3	input.rb	/^  alias_method("my_alias_method3", :my_method)$/;"	a	module:MyModule
my_alias_method4	input.rb	/^  alias_method('my_alias_method4', :my_method)$/;"	a	module:MyModule
M	input-0.rb	/^module M$/;"	m
get	input-0.rb	/^  def get(); end$/;"	f	module:M
set	input-0.rb	/^  def set(); end$/;"	f	module:M
[]	input-0.rb	/^  alias :"[]" :get$/;"	a	module:M
[]=	input-0.rb	/^  alias :"[]=" :set$/;"	a	module:M
set	input-0.rb	/^  alias :set :"[]="$/;"	a	module:M
z	input-0.rb	/^def z(); end$/;"	f
