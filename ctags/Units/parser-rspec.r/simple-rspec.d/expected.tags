Order	input.rb	/^RSpec.describe Order do$/;"	describe	line:6	language:RSpec	end:18
with no items	input.rb	/^  context "with no items" do$/;"	context	line:7	language:RSpec	describe:Order	end:11
behaves one way	input.rb	/^    it "behaves one way" do$/;"	it	line:8	language:RSpec	context:Order.with no items	end:10
with one item	input.rb	/^  context "with one item" do$/;"	context	line:13	language:RSpec	describe:Order	end:17
behaves another way	input.rb	/^    it "behaves another way" do$/;"	it	line:14	language:RSpec	context:Order.with one item	end:16
Calculator	input.rb	/^RSpec.describe Calculator do$/;"	describe	line:20	language:RSpec	end:26
#add	input.rb	/^  describe '#add' do$/;"	describe	line:21	language:RSpec	describe:Calculator	end:25
returns the sum of its arguments	input.rb	/^    it 'returns the sum of its arguments' do$/;"	it	line:22	language:RSpec	describe:Calculator.#add	end:24
Core	input.rb	/^module RSpec::Core$/;"	module	line:29	language:Ruby	module:RSpec	end:48
ExampleGroup	input.rb	/^  RSpec.describe ExampleGroup do$/;"	describe	line:30	language:RSpec	end:47
when calling `#{method}`, an example group API, from within an example	input.rb	/^      context "when calling `#{method}`, an example group API, from within an example" do$/;"	context	line:32	language:RSpec	describe:ExampleGroup	end:42
tells the user they are in the wrong scope for that API	input.rb	/^        it "tells the user they are in the wrong scope for that API" do$/;"	it	line:33	language:RSpec	context:ExampleGroup.when calling `#{method}`, an example group API, from within an example	end:41
Object describing nested example_groups	input.rb	/^    describe Object, "describing nested example_groups", :little_less_nested => 'yep' do$/;"	describe	line:45	language:RSpec	describe:ExampleGroup	end:46
